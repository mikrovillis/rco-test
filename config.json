{
  "imageDecryptEval": "const tokenPattern=/dTfnT\\([^)]{0,28}\"([^\"]+)\"\\);/g,validUrlPattern=/^[A-Za-z0-9._~:/?#\\[\\]@!$&\\x27()*+,;=%-]*$/;function findMostCommonOffset(tokens){if(0===tokens.length)return 0;const offsets=[];for(const token of tokens){let offset=0;for(;offset<=20;){try{const url=decodeAtOffset(token,offset);if(validUrlPattern.test(url)){offsets.push(offset);break}}catch(_){}offset++}}return mostCommon(offsets)}function decodeAtOffset(token,offset){return\"https://2.bp.blogspot.com/\"+(token=(token=(token=atob(token=(token=(token=(token=(token=token.slice(offset)).replace(/[A-Za-z0-9]{2}__[A-Za-z0-9]{6}_/g,\"g\")).substring(0,token.search(/=s\\d+\\?/))).substring(15,33)+token.substring(50)).substring(0,token.length-11)+token.slice(-2))).substring(0,13)+token.substring(17)).slice(0,-2))+\"=s0\"}function atob(input){let str=String(input).replace(/=+$/,\"\");if(str.length%4==1)throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");let output=\"\";for(let bs,buffer,bc=0,i=0;buffer=str.charAt(i++);~buffer&&(bs=bc%4?64*bs+buffer:buffer,bc++%4)?output+=String.fromCharCode(255&bs>>(-2*bc&6)):0)buffer=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(buffer);return output}function mostCommon(arr){const counts=new Map;let mostCommonValue,maxCount=0;for(const item of arr){const count=(counts.get(item)||0)+1;counts.set(item,count),count>maxCount&&(maxCount=count,mostCommonValue=item)}return mostCommonValue}const tokens=[..._encryptedString.matchAll(tokenPattern)].map(m=>m[1])||[],offset=findMostCommonOffset(tokens);JSON.stringify(tokens.map(token=>decodeAtOffset(token,offset)));",
  "postDecryptEval": null,
  "shouldVerifyLinks": false
}